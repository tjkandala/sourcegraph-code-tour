{
  "$schema": "https://raw.githubusercontent.com/sourcegraph/sourcegraph/main/client/shared/src/schema/extension.schema.json",
  "name": "code-tour",
  "description": "Play guided tours of codebases (compatible with VS Code's codetour)",
  "publisher": "tjkandala",
  "version": "0.0.0-DEVELOPMENT",
  "icon": "https://vsls-contrib.gallerycdn.vsassets.io/extensions/vsls-contrib/codetour/0.0.58/1625784500119/Microsoft.VisualStudio.Services.Icons.Default",
  "activationEvents": [
    "*"
  ],
  "wip": true,
  "categories": [
    "Code analysis"
  ],
  "tags": [
    "code tour",
    "onboarding",
    "education"
  ],
  "contributes": {
    "actions": [
      {
        "id": "codeTour.openPanel",
        "command": "openPanel",
        "commandArguments": [
          "codeTour"
        ],
        "actionItem": {
          "label": "Open code tour panel",
          "iconURL": "https://vsls-contrib.gallerycdn.vsassets.io/extensions/vsls-contrib/codetour/0.0.58/1625784500119/Microsoft.VisualStudio.Services.Icons.Default",
          "description": "${get(context, 'codeTour.activeTourTitle') && `Current tour: ${get(context, 'codeTour.activeTourTitle')}` || 'Open the code tour panel'}"
        }
      },
      {
        "id": "codeTour.startTour",
        "command": "codeTour.startTour",
        "commandArguments": [
          0
        ],
        "actionItem": {
          "label": "Start code tour"
        }
      },
      {
        "id": "codeTour.selectTour",
        "command": "codeTour.selectTour",
        "commandArguments": [],
        "actionItem": {
          "label": "Select code tour"
        }
      },
      {
        "id": "codeTour.cancelTour",
        "command": "codeTour.completeTour",
        "commandArguments": [],
        "actionItem": {
          "label": "Cancel tour"
        }
      },
      {
        "id": "codeTour.completeTour",
        "command": "codeTour.completeTour",
        "commandArguments": [],
        "actionItem": {
          "label": "Complete tour"
        }
      },
      {
        "id": "codeTour.prevStepNewLocation",
        "command": "open",
        "commandArguments": [
          "${get(context, 'codeTour.prevStepURL')}"
        ],
        "actionItem": {
          "label": "Previous step"
        }
      },
      {
        "id": "codeTour.prevStepSameLocation",
        "command": "codeTour.prevStepSameLocation",
        "commandArguments": [
          "${get(context, 'codeTour.activeTourIndex')}",
          "${get(context, 'codeTour.tourStep')}"
        ],
        "actionItem": {
          "label": "Previous step"
        }
      },
      {
        "id": "codeTour.nextStepNewLocation",
        "command": "open",
        "commandArguments": [
          "${get(context, 'codeTour.nextStepURL')}"
        ],
        "actionItem": {
          "label": "Next step"
        }
      },
      {
        "id": "codeTour.nextStepSameLocation",
        "command": "codeTour.nextStepSameLocation",
        "commandArguments": [
          "${get(context, 'codeTour.activeTourIndex')}",
          "${get(context, 'codeTour.tourStep')}"
        ],
        "actionItem": {
          "label": "Next step"
        }
      }
    ],
    "menus": {
      "editor/title": [
        {
          "action": "codeTour.openPanel",
          "when": "get(context, `codeTour.workspaceHasTours`)"
        }
      ],
      "panel/toolbar": [
        {
          "action": "codeTour.startTour",
          "when": "get(context, 'codeTour.workspaceHasOneTour') && !get(context, 'codeTour.activeTourTitle')"
        },
        {
          "action": "codeTour.selectTour",
          "when": "get(context, 'codeTour.workspaceHasMultipleTours') && !get(context, 'codeTour.activeTourTitle')"
        },
        {
          "action": "codeTour.cancelTour",
          "when": "get(context, 'codeTour.activeTourTitle') && !get(context, 'codeTour.showCompleteTour')"
        },
        {
          "action": "codeTour.prevStepNewLocation",
          "when": "get(context, 'codeTour.showPrevStepNewLocation')"
        },
        {
          "action": "codeTour.prevStepSameLocation",
          "when": "get(context, 'codeTour.showPrevStepSameLocation')"
        },
        {
          "action": "codeTour.nextStepNewLocation",
          "when": "get(context, 'codeTour.showNextStepNewLocation')"
        },
        {
          "action": "codeTour.nextStepSameLocation",
          "when": "get(context, 'codeTour.showNextStepSameLocation')"
        },
        {
          "action": "codeTour.completeTour",
          "when": "get(context, 'codeTour.showCompleteTour')"
        }
      ],
      "commandPalette": []
    },
    "configuration": {}
  },
  "license": "Apache-2.0",
  "main": "dist/code-tour.js",
  "scripts": {
    "eslint": "eslint 'src/**/*.ts'",
    "typecheck": "tsc -p tsconfig.json",
    "build": "parcel build --out-file dist/code-tour.js src/code-tour.ts",
    "symlink-package": "mkdirp dist && lnfs ./package.json ./dist/package.json",
    "serve": "yarn run symlink-package && parcel serve --no-hmr --out-file dist/code-tour.js src/code-tour.ts",
    "watch:typecheck": "tsc -p tsconfig.json -w",
    "watch:build": "tsc -p tsconfig.dist.json -w",
    "sourcegraph:prepublish": "yarn run typecheck && yarn run build",
    "test": "TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' mocha",
    "generate": "TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' ts-node scripts/generateTourTypes.ts"
  },
  "browserslist": [
    "last 1 Chrome versions",
    "last 1 Firefox versions",
    "last 1 Edge versions",
    "last 1 Safari versions"
  ],
  "mocha": {
    "recursive": true,
    "extensions": "ts",
    "timeout": 200,
    "spec": "src/**/*.test.ts",
    "require": [
      "ts-node/register",
      "source-map-support/register"
    ]
  },
  "devDependencies": {
    "@sourcegraph/eslint-config": "^0.25.1",
    "@sourcegraph/extension-api-stubs": "^1.5.3",
    "@sourcegraph/tsconfig": "^4.0.1",
    "@types/mocha": "^9.0.0",
    "@types/mock-require": "^2.0.0",
    "eslint": "^7.32.0",
    "lnfs-cli": "^2.1.0",
    "mkdirp": "^1.0.4",
    "mocha": "^9.0.3",
    "mock-require": "^3.0.3",
    "parcel-bundler": "^1.12.5",
    "source-map-support": "^0.5.19",
    "sourcegraph": "^25.3.0",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.5"
  },
  "dependencies": {
    "json-schema-to-typescript": "^10.1.4",
    "rxjs": "^6.6.3"
  }
}
